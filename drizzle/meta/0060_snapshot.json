{
  "id": "5ab7ca4b-e983-4a1f-b73e-5c17c11369d0",
  "prevId": "0a21eaed-35cf-453b-9c87-6f49aeaecfe7",
  "version": "7",
  "dialect": "postgresql",
  "tables": {
    "public.accounts": {
      "name": "accounts",
      "schema": "",
      "columns": {
        "user_id": {
          "name": "user_id",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "type": {
          "name": "type",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "provider": {
          "name": "provider",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "provider_account_id": {
          "name": "provider_account_id",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "refresh_token": {
          "name": "refresh_token",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "access_token": {
          "name": "access_token",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "expires_at": {
          "name": "expires_at",
          "type": "integer",
          "primaryKey": false,
          "notNull": false
        },
        "token_type": {
          "name": "token_type",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "scope": {
          "name": "scope",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "id_token": {
          "name": "id_token",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "session_state": {
          "name": "session_state",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {
        "accounts_user_id_idx": {
          "name": "accounts_user_id_idx",
          "columns": [
            {
              "expression": "user_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "accounts_user_id_users_id_fk": {
          "name": "accounts_user_id_users_id_fk",
          "tableFrom": "accounts",
          "tableTo": "users",
          "columnsFrom": [
            "user_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {
        "accounts_provider_provider_account_id_pk": {
          "name": "accounts_provider_provider_account_id_pk",
          "columns": [
            "provider",
            "provider_account_id"
          ]
        }
      },
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.api_keys": {
      "name": "api_keys",
      "schema": "",
      "columns": {
        "uuid": {
          "name": "uuid",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "project_uuid": {
          "name": "project_uuid",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "api_key": {
          "name": "api_key",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "name": {
          "name": "name",
          "type": "text",
          "primaryKey": false,
          "notNull": false,
          "default": "'API Key'"
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {
        "api_keys_project_uuid_idx": {
          "name": "api_keys_project_uuid_idx",
          "columns": [
            {
              "expression": "project_uuid",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "api_keys_project_uuid_projects_uuid_fk": {
          "name": "api_keys_project_uuid_projects_uuid_fk",
          "tableFrom": "api_keys",
          "tableTo": "projects",
          "columnsFrom": [
            "project_uuid"
          ],
          "columnsTo": [
            "uuid"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "api_keys_api_key_unique": {
          "name": "api_keys_api_key_unique",
          "nullsNotDistinct": false,
          "columns": [
            "api_key"
          ]
        }
      },
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.audit_logs": {
      "name": "audit_logs",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "profile_uuid": {
          "name": "profile_uuid",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "type": {
          "name": "type",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "action": {
          "name": "action",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "request_path": {
          "name": "request_path",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "request_method": {
          "name": "request_method",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "request_body": {
          "name": "request_body",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false
        },
        "response_status": {
          "name": "response_status",
          "type": "integer",
          "primaryKey": false,
          "notNull": false
        },
        "response_time_ms": {
          "name": "response_time_ms",
          "type": "integer",
          "primaryKey": false,
          "notNull": false
        },
        "user_agent": {
          "name": "user_agent",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "ip_address": {
          "name": "ip_address",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "server_uuid": {
          "name": "server_uuid",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "metadata": {
          "name": "metadata",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {
        "audit_logs_profile_uuid_idx": {
          "name": "audit_logs_profile_uuid_idx",
          "columns": [
            {
              "expression": "profile_uuid",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "audit_logs_type_idx": {
          "name": "audit_logs_type_idx",
          "columns": [
            {
              "expression": "type",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "audit_logs_created_at_idx": {
          "name": "audit_logs_created_at_idx",
          "columns": [
            {
              "expression": "created_at",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "audit_logs_profile_uuid_profiles_uuid_fk": {
          "name": "audit_logs_profile_uuid_profiles_uuid_fk",
          "tableFrom": "audit_logs",
          "tableTo": "profiles",
          "columnsFrom": [
            "profile_uuid"
          ],
          "columnsTo": [
            "uuid"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "audit_logs_server_uuid_mcp_servers_uuid_fk": {
          "name": "audit_logs_server_uuid_mcp_servers_uuid_fk",
          "tableFrom": "audit_logs",
          "tableTo": "mcp_servers",
          "columnsFrom": [
            "server_uuid"
          ],
          "columnsTo": [
            "uuid"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.chat_analytics": {
      "name": "chat_analytics",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "serial",
          "primaryKey": true,
          "notNull": true
        },
        "embedded_chat_uuid": {
          "name": "embedded_chat_uuid",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "date": {
          "name": "date",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true
        },
        "conversations_started": {
          "name": "conversations_started",
          "type": "integer",
          "primaryKey": false,
          "notNull": false,
          "default": 0
        },
        "messages_sent": {
          "name": "messages_sent",
          "type": "integer",
          "primaryKey": false,
          "notNull": false,
          "default": 0
        },
        "messages_received": {
          "name": "messages_received",
          "type": "integer",
          "primaryKey": false,
          "notNull": false,
          "default": 0
        },
        "contacts_captured": {
          "name": "contacts_captured",
          "type": "integer",
          "primaryKey": false,
          "notNull": false,
          "default": 0
        },
        "avg_conversation_duration": {
          "name": "avg_conversation_duration",
          "type": "integer",
          "primaryKey": false,
          "notNull": false
        },
        "unique_visitors": {
          "name": "unique_visitors",
          "type": "integer",
          "primaryKey": false,
          "notNull": false,
          "default": 0
        },
        "domains": {
          "name": "domains",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false,
          "default": "'{}'::jsonb"
        },
        "tool_usage": {
          "name": "tool_usage",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false,
          "default": "'{}'::jsonb"
        },
        "rag_queries": {
          "name": "rag_queries",
          "type": "integer",
          "primaryKey": false,
          "notNull": false,
          "default": 0
        },
        "rag_hit_rate": {
          "name": "rag_hit_rate",
          "type": "integer",
          "primaryKey": false,
          "notNull": false
        },
        "persona_usage": {
          "name": "persona_usage",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false,
          "default": "'{}'::jsonb"
        },
        "human_interventions": {
          "name": "human_interventions",
          "type": "integer",
          "primaryKey": false,
          "notNull": false,
          "default": 0
        },
        "human_takeovers": {
          "name": "human_takeovers",
          "type": "integer",
          "primaryKey": false,
          "notNull": false,
          "default": 0
        },
        "avg_response_time": {
          "name": "avg_response_time",
          "type": "integer",
          "primaryKey": false,
          "notNull": false
        },
        "conversation_completion_rate": {
          "name": "conversation_completion_rate",
          "type": "integer",
          "primaryKey": false,
          "notNull": false
        },
        "drop_off_points": {
          "name": "drop_off_points",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false,
          "default": "'[]'::jsonb"
        },
        "tokens_used": {
          "name": "tokens_used",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false,
          "default": "'{}'::jsonb"
        },
        "estimated_cost": {
          "name": "estimated_cost",
          "type": "integer",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {
        "idx_analytics_chat_date": {
          "name": "idx_analytics_chat_date",
          "columns": [
            {
              "expression": "embedded_chat_uuid",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            },
            {
              "expression": "date",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "chat_analytics_embedded_chat_uuid_embedded_chats_uuid_fk": {
          "name": "chat_analytics_embedded_chat_uuid_embedded_chats_uuid_fk",
          "tableFrom": "chat_analytics",
          "tableTo": "embedded_chats",
          "columnsFrom": [
            "embedded_chat_uuid"
          ],
          "columnsTo": [
            "uuid"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "unique_analytics_chat_date": {
          "name": "unique_analytics_chat_date",
          "nullsNotDistinct": false,
          "columns": [
            "embedded_chat_uuid",
            "date"
          ]
        }
      },
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.chat_billing": {
      "name": "chat_billing",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "serial",
          "primaryKey": true,
          "notNull": true
        },
        "user_id": {
          "name": "user_id",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "plan_type": {
          "name": "plan_type",
          "type": "varchar(20)",
          "primaryKey": false,
          "notNull": false
        },
        "billing_period_start": {
          "name": "billing_period_start",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true
        },
        "billing_period_end": {
          "name": "billing_period_end",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true
        },
        "conversations_limit": {
          "name": "conversations_limit",
          "type": "integer",
          "primaryKey": false,
          "notNull": false
        },
        "conversations_used": {
          "name": "conversations_used",
          "type": "integer",
          "primaryKey": false,
          "notNull": false,
          "default": 0
        },
        "messages_limit": {
          "name": "messages_limit",
          "type": "integer",
          "primaryKey": false,
          "notNull": false
        },
        "messages_used": {
          "name": "messages_used",
          "type": "integer",
          "primaryKey": false,
          "notNull": false,
          "default": 0
        },
        "overage_charges": {
          "name": "overage_charges",
          "type": "integer",
          "primaryKey": false,
          "notNull": false,
          "default": 0
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {
        "idx_billing_user_period": {
          "name": "idx_billing_user_period",
          "columns": [
            {
              "expression": "user_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            },
            {
              "expression": "billing_period_start",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "chat_billing_user_id_users_id_fk": {
          "name": "chat_billing_user_id_users_id_fk",
          "tableFrom": "chat_billing",
          "tableTo": "users",
          "columnsFrom": [
            "user_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.chat_contacts": {
      "name": "chat_contacts",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "serial",
          "primaryKey": true,
          "notNull": true
        },
        "conversation_uuid": {
          "name": "conversation_uuid",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "embedded_chat_uuid": {
          "name": "embedded_chat_uuid",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "persona_id": {
          "name": "persona_id",
          "type": "integer",
          "primaryKey": false,
          "notNull": false
        },
        "name": {
          "name": "name",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "email": {
          "name": "email",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "phone": {
          "name": "phone",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "company": {
          "name": "company",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "message": {
          "name": "message",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "inquiry_type": {
          "name": "inquiry_type",
          "type": "varchar(50)",
          "primaryKey": false,
          "notNull": false
        },
        "status": {
          "name": "status",
          "type": "varchar(20)",
          "primaryKey": false,
          "notNull": false,
          "default": "'new'"
        },
        "metadata": {
          "name": "metadata",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false,
          "default": "'{}'::jsonb"
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {
        "idx_contacts_chat": {
          "name": "idx_contacts_chat",
          "columns": [
            {
              "expression": "embedded_chat_uuid",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "idx_contacts_status": {
          "name": "idx_contacts_status",
          "columns": [
            {
              "expression": "status",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "idx_contacts_created": {
          "name": "idx_contacts_created",
          "columns": [
            {
              "expression": "created_at",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "chat_contacts_conversation_uuid_chat_conversations_uuid_fk": {
          "name": "chat_contacts_conversation_uuid_chat_conversations_uuid_fk",
          "tableFrom": "chat_contacts",
          "tableTo": "chat_conversations",
          "columnsFrom": [
            "conversation_uuid"
          ],
          "columnsTo": [
            "uuid"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "chat_contacts_embedded_chat_uuid_embedded_chats_uuid_fk": {
          "name": "chat_contacts_embedded_chat_uuid_embedded_chats_uuid_fk",
          "tableFrom": "chat_contacts",
          "tableTo": "embedded_chats",
          "columnsFrom": [
            "embedded_chat_uuid"
          ],
          "columnsTo": [
            "uuid"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "chat_contacts_persona_id_chat_personas_id_fk": {
          "name": "chat_contacts_persona_id_chat_personas_id_fk",
          "tableFrom": "chat_contacts",
          "tableTo": "chat_personas",
          "columnsFrom": [
            "persona_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.chat_conversations": {
      "name": "chat_conversations",
      "schema": "",
      "columns": {
        "uuid": {
          "name": "uuid",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "embedded_chat_uuid": {
          "name": "embedded_chat_uuid",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "visitor_id": {
          "name": "visitor_id",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "visitor_name": {
          "name": "visitor_name",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "visitor_email": {
          "name": "visitor_email",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "visitor_ip": {
          "name": "visitor_ip",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "visitor_user_agent": {
          "name": "visitor_user_agent",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "referrer_url": {
          "name": "referrer_url",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "page_url": {
          "name": "page_url",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "started_at": {
          "name": "started_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "ended_at": {
          "name": "ended_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        },
        "metadata": {
          "name": "metadata",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false,
          "default": "'{}'::jsonb"
        },
        "status": {
          "name": "status",
          "type": "varchar(20)",
          "primaryKey": false,
          "notNull": false,
          "default": "'active'"
        },
        "assigned_user_id": {
          "name": "assigned_user_id",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "assigned_at": {
          "name": "assigned_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        },
        "takeover_at": {
          "name": "takeover_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        },
        "recovery_token": {
          "name": "recovery_token",
          "type": "varchar(64)",
          "primaryKey": false,
          "notNull": false,
          "default": "md5(random()::text || clock_timestamp()::text)"
        },
        "last_heartbeat": {
          "name": "last_heartbeat",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false,
          "default": "now()"
        },
        "authenticated_user_id": {
          "name": "authenticated_user_id",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "authenticated_user_name": {
          "name": "authenticated_user_name",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "authenticated_user_avatar": {
          "name": "authenticated_user_avatar",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "gdpr_consent": {
          "name": "gdpr_consent",
          "type": "boolean",
          "primaryKey": false,
          "notNull": false,
          "default": false
        },
        "gdpr_consent_timestamp": {
          "name": "gdpr_consent_timestamp",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        },
        "deletion_requested_at": {
          "name": "deletion_requested_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {
        "idx_conversations_chat": {
          "name": "idx_conversations_chat",
          "columns": [
            {
              "expression": "embedded_chat_uuid",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "idx_conversations_visitor": {
          "name": "idx_conversations_visitor",
          "columns": [
            {
              "expression": "visitor_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "idx_conversations_status": {
          "name": "idx_conversations_status",
          "columns": [
            {
              "expression": "status",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "idx_conversations_assigned": {
          "name": "idx_conversations_assigned",
          "columns": [
            {
              "expression": "assigned_user_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "idx_conversations_heartbeat": {
          "name": "idx_conversations_heartbeat",
          "columns": [
            {
              "expression": "last_heartbeat",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "idx_conversations_authenticated_user": {
          "name": "idx_conversations_authenticated_user",
          "columns": [
            {
              "expression": "authenticated_user_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "chat_conversations_embedded_chat_uuid_embedded_chats_uuid_fk": {
          "name": "chat_conversations_embedded_chat_uuid_embedded_chats_uuid_fk",
          "tableFrom": "chat_conversations",
          "tableTo": "embedded_chats",
          "columnsFrom": [
            "embedded_chat_uuid"
          ],
          "columnsTo": [
            "uuid"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "chat_conversations_assigned_user_id_users_id_fk": {
          "name": "chat_conversations_assigned_user_id_users_id_fk",
          "tableFrom": "chat_conversations",
          "tableTo": "users",
          "columnsFrom": [
            "assigned_user_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        },
        "chat_conversations_authenticated_user_id_users_id_fk": {
          "name": "chat_conversations_authenticated_user_id_users_id_fk",
          "tableFrom": "chat_conversations",
          "tableTo": "users",
          "columnsFrom": [
            "authenticated_user_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.chat_data_requests": {
      "name": "chat_data_requests",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "serial",
          "primaryKey": true,
          "notNull": true
        },
        "conversation_uuid": {
          "name": "conversation_uuid",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "visitor_email": {
          "name": "visitor_email",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "request_type": {
          "name": "request_type",
          "type": "varchar(20)",
          "primaryKey": false,
          "notNull": false
        },
        "status": {
          "name": "status",
          "type": "varchar(20)",
          "primaryKey": false,
          "notNull": false,
          "default": "'pending'"
        },
        "completed_at": {
          "name": "completed_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {},
      "foreignKeys": {
        "chat_data_requests_conversation_uuid_chat_conversations_uuid_fk": {
          "name": "chat_data_requests_conversation_uuid_chat_conversations_uuid_fk",
          "tableFrom": "chat_data_requests",
          "tableTo": "chat_conversations",
          "columnsFrom": [
            "conversation_uuid"
          ],
          "columnsTo": [
            "uuid"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.chat_messages": {
      "name": "chat_messages",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "serial",
          "primaryKey": true,
          "notNull": true
        },
        "conversation_uuid": {
          "name": "conversation_uuid",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "role": {
          "name": "role",
          "type": "varchar(20)",
          "primaryKey": false,
          "notNull": true
        },
        "content": {
          "name": "content",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "persona_id": {
          "name": "persona_id",
          "type": "integer",
          "primaryKey": false,
          "notNull": false
        },
        "tool_calls": {
          "name": "tool_calls",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false
        },
        "tool_results": {
          "name": "tool_results",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false
        },
        "metadata": {
          "name": "metadata",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false,
          "default": "'{}'::jsonb"
        },
        "created_by": {
          "name": "created_by",
          "type": "varchar(20)",
          "primaryKey": false,
          "notNull": false,
          "default": "'ai'"
        },
        "human_user_id": {
          "name": "human_user_id",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "is_internal": {
          "name": "is_internal",
          "type": "boolean",
          "primaryKey": false,
          "notNull": false,
          "default": false
        },
        "model_provider": {
          "name": "model_provider",
          "type": "varchar(50)",
          "primaryKey": false,
          "notNull": false
        },
        "model_name": {
          "name": "model_name",
          "type": "varchar(100)",
          "primaryKey": false,
          "notNull": false
        },
        "model_config": {
          "name": "model_config",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false
        },
        "tokens_used": {
          "name": "tokens_used",
          "type": "integer",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {
        "idx_messages_conversation": {
          "name": "idx_messages_conversation",
          "columns": [
            {
              "expression": "conversation_uuid",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "idx_messages_created": {
          "name": "idx_messages_created",
          "columns": [
            {
              "expression": "created_at",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "idx_messages_internal": {
          "name": "idx_messages_internal",
          "columns": [
            {
              "expression": "is_internal",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "chat_messages_conversation_uuid_chat_conversations_uuid_fk": {
          "name": "chat_messages_conversation_uuid_chat_conversations_uuid_fk",
          "tableFrom": "chat_messages",
          "tableTo": "chat_conversations",
          "columnsFrom": [
            "conversation_uuid"
          ],
          "columnsTo": [
            "uuid"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "chat_messages_human_user_id_users_id_fk": {
          "name": "chat_messages_human_user_id_users_id_fk",
          "tableFrom": "chat_messages",
          "tableTo": "users",
          "columnsFrom": [
            "human_user_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.chat_monitoring_sessions": {
      "name": "chat_monitoring_sessions",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "serial",
          "primaryKey": true,
          "notNull": true
        },
        "user_id": {
          "name": "user_id",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "conversation_uuid": {
          "name": "conversation_uuid",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "started_at": {
          "name": "started_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "ended_at": {
          "name": "ended_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        },
        "actions_taken": {
          "name": "actions_taken",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false,
          "default": "'[]'::jsonb"
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {
        "idx_monitoring_user": {
          "name": "idx_monitoring_user",
          "columns": [
            {
              "expression": "user_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "idx_monitoring_conversation": {
          "name": "idx_monitoring_conversation",
          "columns": [
            {
              "expression": "conversation_uuid",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "chat_monitoring_sessions_user_id_users_id_fk": {
          "name": "chat_monitoring_sessions_user_id_users_id_fk",
          "tableFrom": "chat_monitoring_sessions",
          "tableTo": "users",
          "columnsFrom": [
            "user_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        },
        "chat_monitoring_sessions_conversation_uuid_chat_conversations_uuid_fk": {
          "name": "chat_monitoring_sessions_conversation_uuid_chat_conversations_uuid_fk",
          "tableFrom": "chat_monitoring_sessions",
          "tableTo": "chat_conversations",
          "columnsFrom": [
            "conversation_uuid"
          ],
          "columnsTo": [
            "uuid"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.chat_personas": {
      "name": "chat_personas",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "serial",
          "primaryKey": true,
          "notNull": true
        },
        "embedded_chat_uuid": {
          "name": "embedded_chat_uuid",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "name": {
          "name": "name",
          "type": "varchar(100)",
          "primaryKey": false,
          "notNull": true
        },
        "role": {
          "name": "role",
          "type": "varchar(100)",
          "primaryKey": false,
          "notNull": false
        },
        "instructions": {
          "name": "instructions",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "avatar_url": {
          "name": "avatar_url",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "contact_email": {
          "name": "contact_email",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "contact_phone": {
          "name": "contact_phone",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "contact_calendar_link": {
          "name": "contact_calendar_link",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "integrations": {
          "name": "integrations",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false,
          "default": "'{}'::jsonb"
        },
        "capabilities": {
          "name": "capabilities",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false,
          "default": "'[]'::jsonb"
        },
        "tools_config": {
          "name": "tools_config",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false,
          "default": "'{}'::jsonb"
        },
        "is_active": {
          "name": "is_active",
          "type": "boolean",
          "primaryKey": false,
          "notNull": false,
          "default": true
        },
        "is_default": {
          "name": "is_default",
          "type": "boolean",
          "primaryKey": false,
          "notNull": false,
          "default": false
        },
        "display_order": {
          "name": "display_order",
          "type": "integer",
          "primaryKey": false,
          "notNull": false,
          "default": 0
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {
        "idx_personas_chat": {
          "name": "idx_personas_chat",
          "columns": [
            {
              "expression": "embedded_chat_uuid",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "idx_personas_active": {
          "name": "idx_personas_active",
          "columns": [
            {
              "expression": "is_active",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "chat_personas_embedded_chat_uuid_embedded_chats_uuid_fk": {
          "name": "chat_personas_embedded_chat_uuid_embedded_chats_uuid_fk",
          "tableFrom": "chat_personas",
          "tableTo": "embedded_chats",
          "columnsFrom": [
            "embedded_chat_uuid"
          ],
          "columnsTo": [
            "uuid"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.chat_templates": {
      "name": "chat_templates",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "serial",
          "primaryKey": true,
          "notNull": true
        },
        "name": {
          "name": "name",
          "type": "varchar(100)",
          "primaryKey": false,
          "notNull": true
        },
        "description": {
          "name": "description",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "category": {
          "name": "category",
          "type": "varchar(50)",
          "primaryKey": false,
          "notNull": false
        },
        "config": {
          "name": "config",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": true
        },
        "preview_image_url": {
          "name": "preview_image_url",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "is_premium": {
          "name": "is_premium",
          "type": "boolean",
          "primaryKey": false,
          "notNull": false,
          "default": false
        },
        "is_public": {
          "name": "is_public",
          "type": "boolean",
          "primaryKey": false,
          "notNull": false,
          "default": false
        },
        "created_by": {
          "name": "created_by",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "install_count": {
          "name": "install_count",
          "type": "integer",
          "primaryKey": false,
          "notNull": false,
          "default": 0
        },
        "rating": {
          "name": "rating",
          "type": "integer",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {
        "idx_templates_category": {
          "name": "idx_templates_category",
          "columns": [
            {
              "expression": "category",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "idx_templates_public": {
          "name": "idx_templates_public",
          "columns": [
            {
              "expression": "is_public",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "chat_templates_created_by_users_id_fk": {
          "name": "chat_templates_created_by_users_id_fk",
          "tableFrom": "chat_templates",
          "tableTo": "users",
          "columnsFrom": [
            "created_by"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.chat_usage": {
      "name": "chat_usage",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "serial",
          "primaryKey": true,
          "notNull": true
        },
        "embedded_chat_uuid": {
          "name": "embedded_chat_uuid",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "date": {
          "name": "date",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true
        },
        "conversations": {
          "name": "conversations",
          "type": "integer",
          "primaryKey": false,
          "notNull": false,
          "default": 0
        },
        "messages": {
          "name": "messages",
          "type": "integer",
          "primaryKey": false,
          "notNull": false,
          "default": 0
        },
        "tokens_used": {
          "name": "tokens_used",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false,
          "default": "'{}'::jsonb"
        },
        "mcp_tool_calls": {
          "name": "mcp_tool_calls",
          "type": "integer",
          "primaryKey": false,
          "notNull": false,
          "default": 0
        },
        "rag_queries": {
          "name": "rag_queries",
          "type": "integer",
          "primaryKey": false,
          "notNull": false,
          "default": 0
        },
        "human_interventions": {
          "name": "human_interventions",
          "type": "integer",
          "primaryKey": false,
          "notNull": false,
          "default": 0
        },
        "estimated_cost": {
          "name": "estimated_cost",
          "type": "integer",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {
        "idx_usage_chat_date": {
          "name": "idx_usage_chat_date",
          "columns": [
            {
              "expression": "embedded_chat_uuid",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            },
            {
              "expression": "date",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "chat_usage_embedded_chat_uuid_embedded_chats_uuid_fk": {
          "name": "chat_usage_embedded_chat_uuid_embedded_chats_uuid_fk",
          "tableFrom": "chat_usage",
          "tableTo": "embedded_chats",
          "columnsFrom": [
            "embedded_chat_uuid"
          ],
          "columnsTo": [
            "uuid"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "unique_usage_chat_date": {
          "name": "unique_usage_chat_date",
          "nullsNotDistinct": false,
          "columns": [
            "embedded_chat_uuid",
            "date"
          ]
        }
      },
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.codes": {
      "name": "codes",
      "schema": "",
      "columns": {
        "uuid": {
          "name": "uuid",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "file_name": {
          "name": "file_name",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "code": {
          "name": "code",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "user_id": {
          "name": "user_id",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {
        "codes_user_id_idx": {
          "name": "codes_user_id_idx",
          "columns": [
            {
              "expression": "user_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "codes_user_id_users_id_fk": {
          "name": "codes_user_id_users_id_fk",
          "tableFrom": "codes",
          "tableTo": "users",
          "columnsFrom": [
            "user_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.custom_instructions": {
      "name": "custom_instructions",
      "schema": "",
      "columns": {
        "uuid": {
          "name": "uuid",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "mcp_server_uuid": {
          "name": "mcp_server_uuid",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "description": {
          "name": "description",
          "type": "text",
          "primaryKey": false,
          "notNull": false,
          "default": "'Custom instructions for this server'"
        },
        "messages": {
          "name": "messages",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": true,
          "default": "'[]'::jsonb"
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {},
      "foreignKeys": {
        "custom_instructions_mcp_server_uuid_mcp_servers_uuid_fk": {
          "name": "custom_instructions_mcp_server_uuid_mcp_servers_uuid_fk",
          "tableFrom": "custom_instructions",
          "tableTo": "mcp_servers",
          "columnsFrom": [
            "mcp_server_uuid"
          ],
          "columnsTo": [
            "uuid"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "custom_instructions_mcp_server_uuid_unique": {
          "name": "custom_instructions_mcp_server_uuid_unique",
          "nullsNotDistinct": false,
          "columns": [
            "mcp_server_uuid"
          ]
        }
      },
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.custom_mcp_servers": {
      "name": "custom_mcp_servers",
      "schema": "",
      "columns": {
        "uuid": {
          "name": "uuid",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "name": {
          "name": "name",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "description": {
          "name": "description",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "code_uuid": {
          "name": "code_uuid",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "additional_args": {
          "name": "additional_args",
          "type": "text[]",
          "primaryKey": false,
          "notNull": true,
          "default": "'{}'::text[]"
        },
        "env": {
          "name": "env",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": true,
          "default": "'{}'::jsonb"
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "profile_uuid": {
          "name": "profile_uuid",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "status": {
          "name": "status",
          "type": "mcp_server_status",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": true,
          "default": "'ACTIVE'"
        }
      },
      "indexes": {
        "custom_mcp_servers_status_idx": {
          "name": "custom_mcp_servers_status_idx",
          "columns": [
            {
              "expression": "status",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "custom_mcp_servers_profile_uuid_idx": {
          "name": "custom_mcp_servers_profile_uuid_idx",
          "columns": [
            {
              "expression": "profile_uuid",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "custom_mcp_servers_code_uuid_codes_uuid_fk": {
          "name": "custom_mcp_servers_code_uuid_codes_uuid_fk",
          "tableFrom": "custom_mcp_servers",
          "tableTo": "codes",
          "columnsFrom": [
            "code_uuid"
          ],
          "columnsTo": [
            "uuid"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "custom_mcp_servers_profile_uuid_profiles_uuid_fk": {
          "name": "custom_mcp_servers_profile_uuid_profiles_uuid_fk",
          "tableFrom": "custom_mcp_servers",
          "tableTo": "profiles",
          "columnsFrom": [
            "profile_uuid"
          ],
          "columnsTo": [
            "uuid"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.docs": {
      "name": "docs",
      "schema": "",
      "columns": {
        "uuid": {
          "name": "uuid",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "user_id": {
          "name": "user_id",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "project_uuid": {
          "name": "project_uuid",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "profile_uuid": {
          "name": "profile_uuid",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "name": {
          "name": "name",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "description": {
          "name": "description",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "file_name": {
          "name": "file_name",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "file_size": {
          "name": "file_size",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        },
        "mime_type": {
          "name": "mime_type",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "file_path": {
          "name": "file_path",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "tags": {
          "name": "tags",
          "type": "text[]",
          "primaryKey": false,
          "notNull": false,
          "default": "'{}'::text[]"
        },
        "rag_document_id": {
          "name": "rag_document_id",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "source": {
          "name": "source",
          "type": "text",
          "primaryKey": false,
          "notNull": true,
          "default": "'upload'"
        },
        "ai_metadata": {
          "name": "ai_metadata",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false
        },
        "content_hash": {
          "name": "content_hash",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "visibility": {
          "name": "visibility",
          "type": "text",
          "primaryKey": false,
          "notNull": true,
          "default": "'private'"
        },
        "version": {
          "name": "version",
          "type": "integer",
          "primaryKey": false,
          "notNull": true,
          "default": 1
        },
        "parent_document_id": {
          "name": "parent_document_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {
        "docs_user_id_idx": {
          "name": "docs_user_id_idx",
          "columns": [
            {
              "expression": "user_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "docs_project_uuid_idx": {
          "name": "docs_project_uuid_idx",
          "columns": [
            {
              "expression": "project_uuid",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "docs_profile_uuid_idx": {
          "name": "docs_profile_uuid_idx",
          "columns": [
            {
              "expression": "profile_uuid",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "docs_name_idx": {
          "name": "docs_name_idx",
          "columns": [
            {
              "expression": "name",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "docs_created_at_idx": {
          "name": "docs_created_at_idx",
          "columns": [
            {
              "expression": "created_at",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "docs_source_idx": {
          "name": "docs_source_idx",
          "columns": [
            {
              "expression": "source",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "docs_visibility_idx": {
          "name": "docs_visibility_idx",
          "columns": [
            {
              "expression": "visibility",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "docs_content_hash_idx": {
          "name": "docs_content_hash_idx",
          "columns": [
            {
              "expression": "content_hash",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "docs_parent_document_id_idx": {
          "name": "docs_parent_document_id_idx",
          "columns": [
            {
              "expression": "parent_document_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "docs_user_id_users_id_fk": {
          "name": "docs_user_id_users_id_fk",
          "tableFrom": "docs",
          "tableTo": "users",
          "columnsFrom": [
            "user_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "docs_project_uuid_projects_uuid_fk": {
          "name": "docs_project_uuid_projects_uuid_fk",
          "tableFrom": "docs",
          "tableTo": "projects",
          "columnsFrom": [
            "project_uuid"
          ],
          "columnsTo": [
            "uuid"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "docs_profile_uuid_profiles_uuid_fk": {
          "name": "docs_profile_uuid_profiles_uuid_fk",
          "tableFrom": "docs",
          "tableTo": "profiles",
          "columnsFrom": [
            "profile_uuid"
          ],
          "columnsTo": [
            "uuid"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.document_model_attributions": {
      "name": "document_model_attributions",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "document_id": {
          "name": "document_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "model_name": {
          "name": "model_name",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "model_provider": {
          "name": "model_provider",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "contribution_type": {
          "name": "contribution_type",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "contribution_timestamp": {
          "name": "contribution_timestamp",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "contribution_metadata": {
          "name": "contribution_metadata",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {
        "document_model_attributions_document_id_idx": {
          "name": "document_model_attributions_document_id_idx",
          "columns": [
            {
              "expression": "document_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "document_model_attributions_model_idx": {
          "name": "document_model_attributions_model_idx",
          "columns": [
            {
              "expression": "model_name",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            },
            {
              "expression": "model_provider",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "document_model_attributions_timestamp_idx": {
          "name": "document_model_attributions_timestamp_idx",
          "columns": [
            {
              "expression": "contribution_timestamp",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "document_model_attributions_document_id_docs_uuid_fk": {
          "name": "document_model_attributions_document_id_docs_uuid_fk",
          "tableFrom": "document_model_attributions",
          "tableTo": "docs",
          "columnsFrom": [
            "document_id"
          ],
          "columnsTo": [
            "uuid"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.document_versions": {
      "name": "document_versions",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "document_id": {
          "name": "document_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "version_number": {
          "name": "version_number",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        },
        "content": {
          "name": "content",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "content_diff": {
          "name": "content_diff",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false
        },
        "created_by_model": {
          "name": "created_by_model",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": true
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "change_summary": {
          "name": "change_summary",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {
        "document_versions_document_id_idx": {
          "name": "document_versions_document_id_idx",
          "columns": [
            {
              "expression": "document_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "document_versions_composite_idx": {
          "name": "document_versions_composite_idx",
          "columns": [
            {
              "expression": "document_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            },
            {
              "expression": "version_number",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "document_versions_document_id_docs_uuid_fk": {
          "name": "document_versions_document_id_docs_uuid_fk",
          "tableFrom": "document_versions",
          "tableTo": "docs",
          "columnsFrom": [
            "document_id"
          ],
          "columnsTo": [
            "uuid"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.embedded_chats": {
      "name": "embedded_chats",
      "schema": "",
      "columns": {
        "uuid": {
          "name": "uuid",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "project_uuid": {
          "name": "project_uuid",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "name": {
          "name": "name",
          "type": "varchar(255)",
          "primaryKey": false,
          "notNull": true,
          "default": "'AI Assistant'"
        },
        "slug": {
          "name": "slug",
          "type": "varchar(100)",
          "primaryKey": false,
          "notNull": false
        },
        "description": {
          "name": "description",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "enabled_mcp_server_uuids": {
          "name": "enabled_mcp_server_uuids",
          "type": "text[]",
          "primaryKey": false,
          "notNull": false,
          "default": "'{}'::text[]"
        },
        "enable_rag": {
          "name": "enable_rag",
          "type": "boolean",
          "primaryKey": false,
          "notNull": false,
          "default": true
        },
        "allowed_domains": {
          "name": "allowed_domains",
          "type": "text[]",
          "primaryKey": false,
          "notNull": false,
          "default": "'{}'::text[]"
        },
        "contact_routing": {
          "name": "contact_routing",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false,
          "default": "'{}'::jsonb"
        },
        "custom_instructions": {
          "name": "custom_instructions",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "welcome_message": {
          "name": "welcome_message",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "suggested_questions": {
          "name": "suggested_questions",
          "type": "text[]",
          "primaryKey": false,
          "notNull": false,
          "default": "'{}'::text[]"
        },
        "theme_config": {
          "name": "theme_config",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false,
          "default": "'{}'::jsonb"
        },
        "position": {
          "name": "position",
          "type": "varchar(20)",
          "primaryKey": false,
          "notNull": false,
          "default": "'bottom-right'"
        },
        "install_count": {
          "name": "install_count",
          "type": "integer",
          "primaryKey": false,
          "notNull": false,
          "default": 0
        },
        "last_active_at": {
          "name": "last_active_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        },
        "model_config": {
          "name": "model_config",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false,
          "default": "'{\n      \"provider\": \"openai\",\n      \"model\": \"gpt-4o-mini\",\n      \"temperature\": 0.7,\n      \"max_tokens\": 1000,\n      \"top_p\": 1.0,\n      \"frequency_penalty\": 0.0,\n      \"presence_penalty\": 0.0\n    }'::jsonb"
        },
        "human_oversight": {
          "name": "human_oversight",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false,
          "default": "'{\n      \"enabled\": false,\n      \"mode\": \"monitor\",\n      \"notification_channels\": [\"app\", \"email\"],\n      \"auto_assign\": false,\n      \"business_hours\": null\n    }'::jsonb"
        },
        "context_window_size": {
          "name": "context_window_size",
          "type": "integer",
          "primaryKey": false,
          "notNull": false,
          "default": 10
        },
        "max_conversation_length": {
          "name": "max_conversation_length",
          "type": "integer",
          "primaryKey": false,
          "notNull": false,
          "default": 100
        },
        "offline_config": {
          "name": "offline_config",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false,
          "default": "'{\n      \"enabled\": true,\n      \"message\": \"We''ll get back to you soon!\",\n      \"email_notification\": true,\n      \"capture_contact\": true\n    }'::jsonb"
        },
        "is_public": {
          "name": "is_public",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true,
          "default": false
        },
        "is_active": {
          "name": "is_active",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true,
          "default": true
        },
        "bot_avatar_url": {
          "name": "bot_avatar_url",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "expose_capabilities": {
          "name": "expose_capabilities",
          "type": "boolean",
          "primaryKey": false,
          "notNull": false,
          "default": false
        },
        "debug_mode": {
          "name": "debug_mode",
          "type": "boolean",
          "primaryKey": false,
          "notNull": false,
          "default": false
        },
        "location": {
          "name": "location",
          "type": "varchar(255)",
          "primaryKey": false,
          "notNull": false
        },
        "profession": {
          "name": "profession",
          "type": "varchar(255)",
          "primaryKey": false,
          "notNull": false
        },
        "expertise": {
          "name": "expertise",
          "type": "text[]",
          "primaryKey": false,
          "notNull": false,
          "default": "'{}'::text[]"
        },
        "category": {
          "name": "category",
          "type": "varchar(100)",
          "primaryKey": false,
          "notNull": false
        },
        "subcategory": {
          "name": "subcategory",
          "type": "varchar(100)",
          "primaryKey": false,
          "notNull": false
        },
        "language": {
          "name": "language",
          "type": "varchar(10)",
          "primaryKey": false,
          "notNull": false,
          "default": "'en'"
        },
        "timezone": {
          "name": "timezone",
          "type": "varchar(50)",
          "primaryKey": false,
          "notNull": false
        },
        "industry": {
          "name": "industry",
          "type": "varchar(100)",
          "primaryKey": false,
          "notNull": false
        },
        "keywords": {
          "name": "keywords",
          "type": "text[]",
          "primaryKey": false,
          "notNull": false,
          "default": "'{}'::text[]"
        },
        "company_name": {
          "name": "company_name",
          "type": "varchar(255)",
          "primaryKey": false,
          "notNull": false
        },
        "company_size": {
          "name": "company_size",
          "type": "varchar(50)",
          "primaryKey": false,
          "notNull": false
        },
        "target_audience": {
          "name": "target_audience",
          "type": "text[]",
          "primaryKey": false,
          "notNull": false,
          "default": "'{}'::text[]"
        },
        "service_hours": {
          "name": "service_hours",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false,
          "default": "'{}'::jsonb"
        },
        "response_time": {
          "name": "response_time",
          "type": "varchar(50)",
          "primaryKey": false,
          "notNull": false
        },
        "pricing_model": {
          "name": "pricing_model",
          "type": "varchar(50)",
          "primaryKey": false,
          "notNull": false
        },
        "semantic_tags": {
          "name": "semantic_tags",
          "type": "text[]",
          "primaryKey": false,
          "notNull": false,
          "default": "'{}'::text[]"
        },
        "use_cases": {
          "name": "use_cases",
          "type": "text[]",
          "primaryKey": false,
          "notNull": false,
          "default": "'{}'::text[]"
        },
        "capabilities_summary": {
          "name": "capabilities_summary",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "personality_traits": {
          "name": "personality_traits",
          "type": "text[]",
          "primaryKey": false,
          "notNull": false,
          "default": "'{}'::text[]"
        },
        "interaction_style": {
          "name": "interaction_style",
          "type": "varchar(100)",
          "primaryKey": false,
          "notNull": false
        },
        "api_key": {
          "name": "api_key",
          "type": "varchar(66)",
          "primaryKey": false,
          "notNull": false
        },
        "api_key_created_at": {
          "name": "api_key_created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        },
        "require_api_key": {
          "name": "require_api_key",
          "type": "boolean",
          "primaryKey": false,
          "notNull": false,
          "default": false
        },
        "api_key_last_used_at": {
          "name": "api_key_last_used_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {
        "idx_embedded_chats_project": {
          "name": "idx_embedded_chats_project",
          "columns": [
            {
              "expression": "project_uuid",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "idx_embedded_chats_public": {
          "name": "idx_embedded_chats_public",
          "columns": [
            {
              "expression": "is_public",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "idx_embedded_chats_active": {
          "name": "idx_embedded_chats_active",
          "columns": [
            {
              "expression": "is_active",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "idx_embedded_chats_api_key": {
          "name": "idx_embedded_chats_api_key",
          "columns": [
            {
              "expression": "api_key",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "idx_embedded_chats_slug": {
          "name": "idx_embedded_chats_slug",
          "columns": [
            {
              "expression": "slug",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "idx_embedded_chats_location": {
          "name": "idx_embedded_chats_location",
          "columns": [
            {
              "expression": "location",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "idx_embedded_chats_category": {
          "name": "idx_embedded_chats_category",
          "columns": [
            {
              "expression": "category",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "idx_embedded_chats_language": {
          "name": "idx_embedded_chats_language",
          "columns": [
            {
              "expression": "language",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "idx_embedded_chats_industry": {
          "name": "idx_embedded_chats_industry",
          "columns": [
            {
              "expression": "industry",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "embedded_chats_project_uuid_projects_uuid_fk": {
          "name": "embedded_chats_project_uuid_projects_uuid_fk",
          "tableFrom": "embedded_chats",
          "tableTo": "projects",
          "columnsFrom": [
            "project_uuid"
          ],
          "columnsTo": [
            "uuid"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "embedded_chats_project_uuid_unique": {
          "name": "embedded_chats_project_uuid_unique",
          "nullsNotDistinct": false,
          "columns": [
            "project_uuid"
          ]
        },
        "embedded_chats_api_key_unique": {
          "name": "embedded_chats_api_key_unique",
          "nullsNotDistinct": false,
          "columns": [
            "api_key"
          ]
        }
      },
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.followers": {
      "name": "followers",
      "schema": "",
      "columns": {
        "uuid": {
          "name": "uuid",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "follower_user_id": {
          "name": "follower_user_id",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "followed_user_id": {
          "name": "followed_user_id",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {
        "followers_follower_user_id_idx": {
          "name": "followers_follower_user_id_idx",
          "columns": [
            {
              "expression": "follower_user_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "followers_followed_user_id_idx": {
          "name": "followers_followed_user_id_idx",
          "columns": [
            {
              "expression": "followed_user_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "followers_follower_user_id_users_id_fk": {
          "name": "followers_follower_user_id_users_id_fk",
          "tableFrom": "followers",
          "tableTo": "users",
          "columnsFrom": [
            "follower_user_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "followers_followed_user_id_users_id_fk": {
          "name": "followers_followed_user_id_users_id_fk",
          "tableFrom": "followers",
          "tableTo": "users",
          "columnsFrom": [
            "followed_user_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "followers_unique_user_relationship_idx": {
          "name": "followers_unique_user_relationship_idx",
          "nullsNotDistinct": false,
          "columns": [
            "follower_user_id",
            "followed_user_id"
          ]
        }
      },
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.log_retention_policies": {
      "name": "log_retention_policies",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "profile_uuid": {
          "name": "profile_uuid",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "retention_days": {
          "name": "retention_days",
          "type": "integer",
          "primaryKey": false,
          "notNull": true,
          "default": 7
        },
        "is_active": {
          "name": "is_active",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true,
          "default": true
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {
        "log_retention_policies_profile_uuid_idx": {
          "name": "log_retention_policies_profile_uuid_idx",
          "columns": [
            {
              "expression": "profile_uuid",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "log_retention_policies_profile_uuid_profiles_uuid_fk": {
          "name": "log_retention_policies_profile_uuid_profiles_uuid_fk",
          "tableFrom": "log_retention_policies",
          "tableTo": "profiles",
          "columnsFrom": [
            "profile_uuid"
          ],
          "columnsTo": [
            "uuid"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.mcp_activity": {
      "name": "mcp_activity",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "serial",
          "primaryKey": true,
          "notNull": true
        },
        "profile_uuid": {
          "name": "profile_uuid",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "server_uuid": {
          "name": "server_uuid",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "external_id": {
          "name": "external_id",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "source": {
          "name": "source",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "action": {
          "name": "action",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "item_name": {
          "name": "item_name",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {
        "idx_server_activity": {
          "name": "idx_server_activity",
          "columns": [
            {
              "expression": "server_uuid",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            },
            {
              "expression": "source",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            },
            {
              "expression": "created_at",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "idx_external_activity": {
          "name": "idx_external_activity",
          "columns": [
            {
              "expression": "external_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            },
            {
              "expression": "source",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            },
            {
              "expression": "created_at",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "idx_action_time": {
          "name": "idx_action_time",
          "columns": [
            {
              "expression": "action",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            },
            {
              "expression": "created_at",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.mcp_oauth_sessions": {
      "name": "mcp_oauth_sessions",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "serial",
          "primaryKey": true,
          "notNull": true
        },
        "state": {
          "name": "state",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "server_uuid": {
          "name": "server_uuid",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "profile_uuid": {
          "name": "profile_uuid",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "callback_url": {
          "name": "callback_url",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "provider": {
          "name": "provider",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "expires_at": {
          "name": "expires_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {
        "idx_mcp_oauth_sessions_state": {
          "name": "idx_mcp_oauth_sessions_state",
          "columns": [
            {
              "expression": "state",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "idx_mcp_oauth_sessions_expires_at": {
          "name": "idx_mcp_oauth_sessions_expires_at",
          "columns": [
            {
              "expression": "expires_at",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "mcp_oauth_sessions_state_unique": {
          "name": "mcp_oauth_sessions_state_unique",
          "nullsNotDistinct": false,
          "columns": [
            "state"
          ]
        }
      },
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.mcp_servers": {
      "name": "mcp_servers",
      "schema": "",
      "columns": {
        "uuid": {
          "name": "uuid",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "name": {
          "name": "name",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "description": {
          "name": "description",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "type": {
          "name": "type",
          "type": "mcp_server_type",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": true,
          "default": "'STDIO'"
        },
        "command": {
          "name": "command",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "args": {
          "name": "args",
          "type": "text[]",
          "primaryKey": false,
          "notNull": false
        },
        "env": {
          "name": "env",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false
        },
        "url": {
          "name": "url",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "command_encrypted": {
          "name": "command_encrypted",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "args_encrypted": {
          "name": "args_encrypted",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "env_encrypted": {
          "name": "env_encrypted",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "url_encrypted": {
          "name": "url_encrypted",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "profile_uuid": {
          "name": "profile_uuid",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "status": {
          "name": "status",
          "type": "mcp_server_status",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": true,
          "default": "'ACTIVE'"
        },
        "source": {
          "name": "source",
          "type": "mcp_server_source",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": true,
          "default": "'PLUGGEDIN'"
        },
        "external_id": {
          "name": "external_id",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "notes": {
          "name": "notes",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "config": {
          "name": "config",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {
        "mcp_servers_status_idx": {
          "name": "mcp_servers_status_idx",
          "columns": [
            {
              "expression": "status",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "mcp_servers_profile_uuid_idx": {
          "name": "mcp_servers_profile_uuid_idx",
          "columns": [
            {
              "expression": "profile_uuid",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "mcp_servers_type_idx": {
          "name": "mcp_servers_type_idx",
          "columns": [
            {
              "expression": "type",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "idx_mcp_servers_profile_status": {
          "name": "idx_mcp_servers_profile_status",
          "columns": [
            {
              "expression": "profile_uuid",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            },
            {
              "expression": "status",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "mcp_servers_profile_uuid_profiles_uuid_fk": {
          "name": "mcp_servers_profile_uuid_profiles_uuid_fk",
          "tableFrom": "mcp_servers",
          "tableTo": "profiles",
          "columnsFrom": [
            "profile_uuid"
          ],
          "columnsTo": [
            "uuid"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.mcp_sessions": {
      "name": "mcp_sessions",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "varchar(128)",
          "primaryKey": true,
          "notNull": true
        },
        "server_uuid": {
          "name": "server_uuid",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "profile_uuid": {
          "name": "profile_uuid",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "session_data": {
          "name": "session_data",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": true,
          "default": "'{}'::jsonb"
        },
        "last_activity": {
          "name": "last_activity",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "expires_at": {
          "name": "expires_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {
        "idx_mcp_sessions_server_uuid": {
          "name": "idx_mcp_sessions_server_uuid",
          "columns": [
            {
              "expression": "server_uuid",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "idx_mcp_sessions_expires_at": {
          "name": "idx_mcp_sessions_expires_at",
          "columns": [
            {
              "expression": "expires_at",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "idx_mcp_sessions_profile_uuid": {
          "name": "idx_mcp_sessions_profile_uuid",
          "columns": [
            {
              "expression": "profile_uuid",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "mcp_sessions_server_uuid_mcp_servers_uuid_fk": {
          "name": "mcp_sessions_server_uuid_mcp_servers_uuid_fk",
          "tableFrom": "mcp_sessions",
          "tableTo": "mcp_servers",
          "columnsFrom": [
            "server_uuid"
          ],
          "columnsTo": [
            "uuid"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "mcp_sessions_profile_uuid_profiles_uuid_fk": {
          "name": "mcp_sessions_profile_uuid_profiles_uuid_fk",
          "tableFrom": "mcp_sessions",
          "tableTo": "profiles",
          "columnsFrom": [
            "profile_uuid"
          ],
          "columnsTo": [
            "uuid"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.notifications": {
      "name": "notifications",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "profile_uuid": {
          "name": "profile_uuid",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "type": {
          "name": "type",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "title": {
          "name": "title",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "message": {
          "name": "message",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "read": {
          "name": "read",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true,
          "default": false
        },
        "link": {
          "name": "link",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "severity": {
          "name": "severity",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "completed": {
          "name": "completed",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true,
          "default": false
        },
        "metadata": {
          "name": "metadata",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false,
          "default": "'{}'::jsonb"
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "expires_at": {
          "name": "expires_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {
        "notifications_profile_uuid_idx": {
          "name": "notifications_profile_uuid_idx",
          "columns": [
            {
              "expression": "profile_uuid",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "notifications_read_idx": {
          "name": "notifications_read_idx",
          "columns": [
            {
              "expression": "read",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "notifications_created_at_idx": {
          "name": "notifications_created_at_idx",
          "columns": [
            {
              "expression": "created_at",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "idx_notifications_profile_read_created": {
          "name": "idx_notifications_profile_read_created",
          "columns": [
            {
              "expression": "profile_uuid",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            },
            {
              "expression": "read",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            },
            {
              "expression": "created_at",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "notifications_profile_uuid_profiles_uuid_fk": {
          "name": "notifications_profile_uuid_profiles_uuid_fk",
          "tableFrom": "notifications",
          "tableTo": "profiles",
          "columnsFrom": [
            "profile_uuid"
          ],
          "columnsTo": [
            "uuid"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.password_reset_tokens": {
      "name": "password_reset_tokens",
      "schema": "",
      "columns": {
        "identifier": {
          "name": "identifier",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "token": {
          "name": "token",
          "type": "text",
          "primaryKey": true,
          "notNull": true
        },
        "expires": {
          "name": "expires",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {},
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.playground_settings": {
      "name": "playground_settings",
      "schema": "",
      "columns": {
        "uuid": {
          "name": "uuid",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "profile_uuid": {
          "name": "profile_uuid",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "provider": {
          "name": "provider",
          "type": "text",
          "primaryKey": false,
          "notNull": true,
          "default": "'anthropic'"
        },
        "model": {
          "name": "model",
          "type": "text",
          "primaryKey": false,
          "notNull": true,
          "default": "'claude-3-7-sonnet-20250219'"
        },
        "temperature": {
          "name": "temperature",
          "type": "integer",
          "primaryKey": false,
          "notNull": true,
          "default": 0
        },
        "max_tokens": {
          "name": "max_tokens",
          "type": "integer",
          "primaryKey": false,
          "notNull": true,
          "default": 1000
        },
        "log_level": {
          "name": "log_level",
          "type": "text",
          "primaryKey": false,
          "notNull": true,
          "default": "'info'"
        },
        "rag_enabled": {
          "name": "rag_enabled",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true,
          "default": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {
        "playground_settings_profile_uuid_idx": {
          "name": "playground_settings_profile_uuid_idx",
          "columns": [
            {
              "expression": "profile_uuid",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "playground_settings_profile_uuid_profiles_uuid_fk": {
          "name": "playground_settings_profile_uuid_profiles_uuid_fk",
          "tableFrom": "playground_settings",
          "tableTo": "profiles",
          "columnsFrom": [
            "profile_uuid"
          ],
          "columnsTo": [
            "uuid"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "playground_settings_profile_uuid_unique": {
          "name": "playground_settings_profile_uuid_unique",
          "nullsNotDistinct": false,
          "columns": [
            "profile_uuid"
          ]
        }
      },
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.profiles": {
      "name": "profiles",
      "schema": "",
      "columns": {
        "uuid": {
          "name": "uuid",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "name": {
          "name": "name",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "project_uuid": {
          "name": "project_uuid",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "language": {
          "name": "language",
          "type": "language",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": false,
          "default": "'en'"
        },
        "enabled_capabilities": {
          "name": "enabled_capabilities",
          "type": "profile_capability[]",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": true,
          "default": "'{}'::profile_capability[]"
        }
      },
      "indexes": {
        "profiles_project_uuid_idx": {
          "name": "profiles_project_uuid_idx",
          "columns": [
            {
              "expression": "project_uuid",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "profiles_project_uuid_projects_uuid_fk": {
          "name": "profiles_project_uuid_projects_uuid_fk",
          "tableFrom": "profiles",
          "tableTo": "projects",
          "columnsFrom": [
            "project_uuid"
          ],
          "columnsTo": [
            "uuid"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.projects": {
      "name": "projects",
      "schema": "",
      "columns": {
        "uuid": {
          "name": "uuid",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "name": {
          "name": "name",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "active_profile_uuid": {
          "name": "active_profile_uuid",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "user_id": {
          "name": "user_id",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "embedded_chat_enabled": {
          "name": "embedded_chat_enabled",
          "type": "boolean",
          "primaryKey": false,
          "notNull": false,
          "default": false
        },
        "embedded_chat_uuid": {
          "name": "embedded_chat_uuid",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {
        "projects_user_id_idx": {
          "name": "projects_user_id_idx",
          "columns": [
            {
              "expression": "user_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "projects_user_id_users_id_fk": {
          "name": "projects_user_id_users_id_fk",
          "tableFrom": "projects",
          "tableTo": "users",
          "columnsFrom": [
            "user_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.prompts": {
      "name": "prompts",
      "schema": "",
      "columns": {
        "uuid": {
          "name": "uuid",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "mcp_server_uuid": {
          "name": "mcp_server_uuid",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "name": {
          "name": "name",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "description": {
          "name": "description",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "arguments_schema": {
          "name": "arguments_schema",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": true,
          "default": "'[]'::jsonb"
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {
        "prompts_mcp_server_uuid_idx": {
          "name": "prompts_mcp_server_uuid_idx",
          "columns": [
            {
              "expression": "mcp_server_uuid",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "prompts_mcp_server_uuid_mcp_servers_uuid_fk": {
          "name": "prompts_mcp_server_uuid_mcp_servers_uuid_fk",
          "tableFrom": "prompts",
          "tableTo": "mcp_servers",
          "columnsFrom": [
            "mcp_server_uuid"
          ],
          "columnsTo": [
            "uuid"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "prompts_unique_prompt_name_per_server_idx": {
          "name": "prompts_unique_prompt_name_per_server_idx",
          "nullsNotDistinct": false,
          "columns": [
            "mcp_server_uuid",
            "name"
          ]
        }
      },
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.registry_oauth_sessions": {
      "name": "registry_oauth_sessions",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "serial",
          "primaryKey": true,
          "notNull": true
        },
        "user_id": {
          "name": "user_id",
          "type": "varchar(255)",
          "primaryKey": false,
          "notNull": true
        },
        "session_token_hash": {
          "name": "session_token_hash",
          "type": "varchar(64)",
          "primaryKey": false,
          "notNull": true
        },
        "oauth_token": {
          "name": "oauth_token",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "github_username": {
          "name": "github_username",
          "type": "varchar(255)",
          "primaryKey": false,
          "notNull": true
        },
        "expires_at": {
          "name": "expires_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "last_used_at": {
          "name": "last_used_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {
        "idx_registry_oauth_sessions_user_id": {
          "name": "idx_registry_oauth_sessions_user_id",
          "columns": [
            {
              "expression": "user_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "idx_registry_oauth_sessions_token_hash": {
          "name": "idx_registry_oauth_sessions_token_hash",
          "columns": [
            {
              "expression": "session_token_hash",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "idx_registry_oauth_sessions_expires_at": {
          "name": "idx_registry_oauth_sessions_expires_at",
          "columns": [
            {
              "expression": "expires_at",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "registry_oauth_sessions_user_id_users_id_fk": {
          "name": "registry_oauth_sessions_user_id_users_id_fk",
          "tableFrom": "registry_oauth_sessions",
          "tableTo": "users",
          "columnsFrom": [
            "user_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "registry_oauth_sessions_session_token_hash_unique": {
          "name": "registry_oauth_sessions_session_token_hash_unique",
          "nullsNotDistinct": false,
          "columns": [
            "session_token_hash"
          ]
        }
      },
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.registry_servers": {
      "name": "registry_servers",
      "schema": "",
      "columns": {
        "uuid": {
          "name": "uuid",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "registry_id": {
          "name": "registry_id",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "name": {
          "name": "name",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "github_owner": {
          "name": "github_owner",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "github_repo": {
          "name": "github_repo",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "repository_url": {
          "name": "repository_url",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "description": {
          "name": "description",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "is_claimed": {
          "name": "is_claimed",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true,
          "default": false
        },
        "is_published": {
          "name": "is_published",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true,
          "default": false
        },
        "claimed_by_user_id": {
          "name": "claimed_by_user_id",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "claimed_at": {
          "name": "claimed_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        },
        "published_at": {
          "name": "published_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        },
        "metadata": {
          "name": "metadata",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {
        "registry_servers_github_idx": {
          "name": "registry_servers_github_idx",
          "columns": [
            {
              "expression": "github_owner",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            },
            {
              "expression": "github_repo",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "registry_servers_claimed_by_idx": {
          "name": "registry_servers_claimed_by_idx",
          "columns": [
            {
              "expression": "claimed_by_user_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "registry_servers_is_published_idx": {
          "name": "registry_servers_is_published_idx",
          "columns": [
            {
              "expression": "is_published",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "registry_servers_claimed_by_user_id_users_id_fk": {
          "name": "registry_servers_claimed_by_user_id_users_id_fk",
          "tableFrom": "registry_servers",
          "tableTo": "users",
          "columnsFrom": [
            "claimed_by_user_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "set null",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "registry_servers_registry_id_unique": {
          "name": "registry_servers_registry_id_unique",
          "nullsNotDistinct": false,
          "columns": [
            "registry_id"
          ]
        }
      },
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.release_notes": {
      "name": "release_notes",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "serial",
          "primaryKey": true,
          "notNull": true
        },
        "repository": {
          "name": "repository",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "version": {
          "name": "version",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "release_date": {
          "name": "release_date",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true
        },
        "content": {
          "name": "content",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": true
        },
        "commit_sha": {
          "name": "commit_sha",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {},
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.resource_templates": {
      "name": "resource_templates",
      "schema": "",
      "columns": {
        "uuid": {
          "name": "uuid",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "mcp_server_uuid": {
          "name": "mcp_server_uuid",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "uri_template": {
          "name": "uri_template",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "name": {
          "name": "name",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "description": {
          "name": "description",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "mime_type": {
          "name": "mime_type",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "template_variables": {
          "name": "template_variables",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": true,
          "default": "'[]'::jsonb"
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {
        "resource_templates_mcp_server_uuid_idx": {
          "name": "resource_templates_mcp_server_uuid_idx",
          "columns": [
            {
              "expression": "mcp_server_uuid",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "resource_templates_mcp_server_uuid_mcp_servers_uuid_fk": {
          "name": "resource_templates_mcp_server_uuid_mcp_servers_uuid_fk",
          "tableFrom": "resource_templates",
          "tableTo": "mcp_servers",
          "columnsFrom": [
            "mcp_server_uuid"
          ],
          "columnsTo": [
            "uuid"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.resources": {
      "name": "resources",
      "schema": "",
      "columns": {
        "uuid": {
          "name": "uuid",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "mcp_server_uuid": {
          "name": "mcp_server_uuid",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "uri": {
          "name": "uri",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "name": {
          "name": "name",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "description": {
          "name": "description",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "mime_type": {
          "name": "mime_type",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "status": {
          "name": "status",
          "type": "toggle_status",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": true,
          "default": "'ACTIVE'"
        }
      },
      "indexes": {
        "resources_mcp_server_uuid_idx": {
          "name": "resources_mcp_server_uuid_idx",
          "columns": [
            {
              "expression": "mcp_server_uuid",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "resources_status_idx": {
          "name": "resources_status_idx",
          "columns": [
            {
              "expression": "status",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "resources_mcp_server_uuid_mcp_servers_uuid_fk": {
          "name": "resources_mcp_server_uuid_mcp_servers_uuid_fk",
          "tableFrom": "resources",
          "tableTo": "mcp_servers",
          "columnsFrom": [
            "mcp_server_uuid"
          ],
          "columnsTo": [
            "uuid"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "resources_unique_uri_per_server_idx": {
          "name": "resources_unique_uri_per_server_idx",
          "nullsNotDistinct": false,
          "columns": [
            "mcp_server_uuid",
            "uri"
          ]
        }
      },
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.search_cache": {
      "name": "search_cache",
      "schema": "",
      "columns": {
        "uuid": {
          "name": "uuid",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "source": {
          "name": "source",
          "type": "mcp_server_source",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": true
        },
        "query": {
          "name": "query",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "results": {
          "name": "results",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": true
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "expires_at": {
          "name": "expires_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {
        "search_cache_source_query_idx": {
          "name": "search_cache_source_query_idx",
          "columns": [
            {
              "expression": "source",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            },
            {
              "expression": "query",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "search_cache_expires_at_idx": {
          "name": "search_cache_expires_at_idx",
          "columns": [
            {
              "expression": "expires_at",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.server_claim_requests": {
      "name": "server_claim_requests",
      "schema": "",
      "columns": {
        "uuid": {
          "name": "uuid",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "server_uuid": {
          "name": "server_uuid",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "user_id": {
          "name": "user_id",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "status": {
          "name": "status",
          "type": "text",
          "primaryKey": false,
          "notNull": true,
          "default": "'pending'"
        },
        "github_username": {
          "name": "github_username",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "processed_at": {
          "name": "processed_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {
        "server_claim_requests_server_idx": {
          "name": "server_claim_requests_server_idx",
          "columns": [
            {
              "expression": "server_uuid",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "server_claim_requests_user_idx": {
          "name": "server_claim_requests_user_idx",
          "columns": [
            {
              "expression": "user_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "server_claim_requests_status_idx": {
          "name": "server_claim_requests_status_idx",
          "columns": [
            {
              "expression": "status",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "server_claim_requests_server_uuid_registry_servers_uuid_fk": {
          "name": "server_claim_requests_server_uuid_registry_servers_uuid_fk",
          "tableFrom": "server_claim_requests",
          "tableTo": "registry_servers",
          "columnsFrom": [
            "server_uuid"
          ],
          "columnsTo": [
            "uuid"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "server_claim_requests_user_id_users_id_fk": {
          "name": "server_claim_requests_user_id_users_id_fk",
          "tableFrom": "server_claim_requests",
          "tableTo": "users",
          "columnsFrom": [
            "user_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.server_installations": {
      "name": "server_installations",
      "schema": "",
      "columns": {
        "uuid": {
          "name": "uuid",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "server_uuid": {
          "name": "server_uuid",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "external_id": {
          "name": "external_id",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "source": {
          "name": "source",
          "type": "mcp_server_source",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": true
        },
        "profile_uuid": {
          "name": "profile_uuid",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {
        "server_installations_server_uuid_idx": {
          "name": "server_installations_server_uuid_idx",
          "columns": [
            {
              "expression": "server_uuid",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "server_installations_external_id_source_idx": {
          "name": "server_installations_external_id_source_idx",
          "columns": [
            {
              "expression": "external_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            },
            {
              "expression": "source",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "server_installations_profile_uuid_idx": {
          "name": "server_installations_profile_uuid_idx",
          "columns": [
            {
              "expression": "profile_uuid",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "idx_server_installations_profile_server": {
          "name": "idx_server_installations_profile_server",
          "columns": [
            {
              "expression": "profile_uuid",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            },
            {
              "expression": "server_uuid",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "server_installations_server_uuid_mcp_servers_uuid_fk": {
          "name": "server_installations_server_uuid_mcp_servers_uuid_fk",
          "tableFrom": "server_installations",
          "tableTo": "mcp_servers",
          "columnsFrom": [
            "server_uuid"
          ],
          "columnsTo": [
            "uuid"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "server_installations_profile_uuid_profiles_uuid_fk": {
          "name": "server_installations_profile_uuid_profiles_uuid_fk",
          "tableFrom": "server_installations",
          "tableTo": "profiles",
          "columnsFrom": [
            "profile_uuid"
          ],
          "columnsTo": [
            "uuid"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.server_reviews": {
      "name": "server_reviews",
      "schema": "",
      "columns": {
        "uuid": {
          "name": "uuid",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "server_source": {
          "name": "server_source",
          "type": "mcp_server_source",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": true
        },
        "server_external_id": {
          "name": "server_external_id",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "user_id": {
          "name": "user_id",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "rating": {
          "name": "rating",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        },
        "comment": {
          "name": "comment",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {
        "server_reviews_source_external_id_idx": {
          "name": "server_reviews_source_external_id_idx",
          "columns": [
            {
              "expression": "server_source",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            },
            {
              "expression": "server_external_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "server_reviews_user_id_idx": {
          "name": "server_reviews_user_id_idx",
          "columns": [
            {
              "expression": "user_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "server_reviews_user_id_users_id_fk": {
          "name": "server_reviews_user_id_users_id_fk",
          "tableFrom": "server_reviews",
          "tableTo": "users",
          "columnsFrom": [
            "user_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "server_reviews_unique_user_server_idx": {
          "name": "server_reviews_unique_user_server_idx",
          "nullsNotDistinct": false,
          "columns": [
            "user_id",
            "server_source",
            "server_external_id"
          ]
        }
      },
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.sessions": {
      "name": "sessions",
      "schema": "",
      "columns": {
        "session_token": {
          "name": "session_token",
          "type": "text",
          "primaryKey": true,
          "notNull": true
        },
        "user_id": {
          "name": "user_id",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "expires": {
          "name": "expires",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {
        "sessions_user_id_idx": {
          "name": "sessions_user_id_idx",
          "columns": [
            {
              "expression": "user_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "sessions_user_id_users_id_fk": {
          "name": "sessions_user_id_users_id_fk",
          "tableFrom": "sessions",
          "tableTo": "users",
          "columnsFrom": [
            "user_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.shared_collections": {
      "name": "shared_collections",
      "schema": "",
      "columns": {
        "uuid": {
          "name": "uuid",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "profile_uuid": {
          "name": "profile_uuid",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "title": {
          "name": "title",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "description": {
          "name": "description",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "content": {
          "name": "content",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": true
        },
        "is_public": {
          "name": "is_public",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true,
          "default": true
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {
        "shared_collections_profile_uuid_idx": {
          "name": "shared_collections_profile_uuid_idx",
          "columns": [
            {
              "expression": "profile_uuid",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "shared_collections_is_public_idx": {
          "name": "shared_collections_is_public_idx",
          "columns": [
            {
              "expression": "is_public",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "shared_collections_profile_uuid_profiles_uuid_fk": {
          "name": "shared_collections_profile_uuid_profiles_uuid_fk",
          "tableFrom": "shared_collections",
          "tableTo": "profiles",
          "columnsFrom": [
            "profile_uuid"
          ],
          "columnsTo": [
            "uuid"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.shared_mcp_servers": {
      "name": "shared_mcp_servers",
      "schema": "",
      "columns": {
        "uuid": {
          "name": "uuid",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "profile_uuid": {
          "name": "profile_uuid",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "server_uuid": {
          "name": "server_uuid",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "title": {
          "name": "title",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "description": {
          "name": "description",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "is_public": {
          "name": "is_public",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true,
          "default": true
        },
        "template": {
          "name": "template",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": true,
          "default": "'{}'::jsonb"
        },
        "requires_credentials": {
          "name": "requires_credentials",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true,
          "default": false
        },
        "is_claimed": {
          "name": "is_claimed",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true,
          "default": false
        },
        "claimed_by_user_id": {
          "name": "claimed_by_user_id",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "claimed_at": {
          "name": "claimed_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        },
        "registry_server_uuid": {
          "name": "registry_server_uuid",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {
        "shared_mcp_servers_profile_uuid_idx": {
          "name": "shared_mcp_servers_profile_uuid_idx",
          "columns": [
            {
              "expression": "profile_uuid",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "shared_mcp_servers_server_uuid_idx": {
          "name": "shared_mcp_servers_server_uuid_idx",
          "columns": [
            {
              "expression": "server_uuid",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "shared_mcp_servers_is_public_idx": {
          "name": "shared_mcp_servers_is_public_idx",
          "columns": [
            {
              "expression": "is_public",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "shared_mcp_servers_is_claimed_idx": {
          "name": "shared_mcp_servers_is_claimed_idx",
          "columns": [
            {
              "expression": "is_claimed",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "shared_mcp_servers_claimed_by_idx": {
          "name": "shared_mcp_servers_claimed_by_idx",
          "columns": [
            {
              "expression": "claimed_by_user_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "idx_shared_mcp_servers_public_profile": {
          "name": "idx_shared_mcp_servers_public_profile",
          "columns": [
            {
              "expression": "is_public",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            },
            {
              "expression": "profile_uuid",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "idx_shared_mcp_servers_public_created": {
          "name": "idx_shared_mcp_servers_public_created",
          "columns": [
            {
              "expression": "is_public",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            },
            {
              "expression": "created_at",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "shared_mcp_servers_profile_uuid_profiles_uuid_fk": {
          "name": "shared_mcp_servers_profile_uuid_profiles_uuid_fk",
          "tableFrom": "shared_mcp_servers",
          "tableTo": "profiles",
          "columnsFrom": [
            "profile_uuid"
          ],
          "columnsTo": [
            "uuid"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "shared_mcp_servers_server_uuid_mcp_servers_uuid_fk": {
          "name": "shared_mcp_servers_server_uuid_mcp_servers_uuid_fk",
          "tableFrom": "shared_mcp_servers",
          "tableTo": "mcp_servers",
          "columnsFrom": [
            "server_uuid"
          ],
          "columnsTo": [
            "uuid"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "shared_mcp_servers_claimed_by_user_id_users_id_fk": {
          "name": "shared_mcp_servers_claimed_by_user_id_users_id_fk",
          "tableFrom": "shared_mcp_servers",
          "tableTo": "users",
          "columnsFrom": [
            "claimed_by_user_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "set null",
          "onUpdate": "no action"
        },
        "shared_mcp_servers_registry_server_uuid_registry_servers_uuid_fk": {
          "name": "shared_mcp_servers_registry_server_uuid_registry_servers_uuid_fk",
          "tableFrom": "shared_mcp_servers",
          "tableTo": "registry_servers",
          "columnsFrom": [
            "registry_server_uuid"
          ],
          "columnsTo": [
            "uuid"
          ],
          "onDelete": "set null",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.system_logs": {
      "name": "system_logs",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "level": {
          "name": "level",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "source": {
          "name": "source",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "message": {
          "name": "message",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "details": {
          "name": "details",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {
        "system_logs_level_idx": {
          "name": "system_logs_level_idx",
          "columns": [
            {
              "expression": "level",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "system_logs_source_idx": {
          "name": "system_logs_source_idx",
          "columns": [
            {
              "expression": "source",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "system_logs_created_at_idx": {
          "name": "system_logs_created_at_idx",
          "columns": [
            {
              "expression": "created_at",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.token_usage": {
      "name": "token_usage",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "serial",
          "primaryKey": true,
          "notNull": true
        },
        "profile_uuid": {
          "name": "profile_uuid",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "embedded_chat_uuid": {
          "name": "embedded_chat_uuid",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "conversation_uuid": {
          "name": "conversation_uuid",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "message_id": {
          "name": "message_id",
          "type": "integer",
          "primaryKey": false,
          "notNull": false
        },
        "provider": {
          "name": "provider",
          "type": "varchar(50)",
          "primaryKey": false,
          "notNull": true
        },
        "model": {
          "name": "model",
          "type": "varchar(100)",
          "primaryKey": false,
          "notNull": true
        },
        "prompt_tokens": {
          "name": "prompt_tokens",
          "type": "integer",
          "primaryKey": false,
          "notNull": true,
          "default": 0
        },
        "completion_tokens": {
          "name": "completion_tokens",
          "type": "integer",
          "primaryKey": false,
          "notNull": true,
          "default": 0
        },
        "total_tokens": {
          "name": "total_tokens",
          "type": "integer",
          "primaryKey": false,
          "notNull": true,
          "default": 0
        },
        "prompt_cost": {
          "name": "prompt_cost",
          "type": "integer",
          "primaryKey": false,
          "notNull": false,
          "default": 0
        },
        "completion_cost": {
          "name": "completion_cost",
          "type": "integer",
          "primaryKey": false,
          "notNull": false,
          "default": 0
        },
        "total_cost": {
          "name": "total_cost",
          "type": "integer",
          "primaryKey": false,
          "notNull": false,
          "default": 0
        },
        "context_type": {
          "name": "context_type",
          "type": "varchar(20)",
          "primaryKey": false,
          "notNull": true,
          "default": "'playground'"
        },
        "metadata": {
          "name": "metadata",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {
        "idx_token_usage_profile": {
          "name": "idx_token_usage_profile",
          "columns": [
            {
              "expression": "profile_uuid",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            },
            {
              "expression": "created_at",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "idx_token_usage_chat": {
          "name": "idx_token_usage_chat",
          "columns": [
            {
              "expression": "embedded_chat_uuid",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            },
            {
              "expression": "created_at",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "idx_token_usage_conversation": {
          "name": "idx_token_usage_conversation",
          "columns": [
            {
              "expression": "conversation_uuid",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "idx_token_usage_provider": {
          "name": "idx_token_usage_provider",
          "columns": [
            {
              "expression": "provider",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            },
            {
              "expression": "model",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            },
            {
              "expression": "created_at",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "token_usage_profile_uuid_profiles_uuid_fk": {
          "name": "token_usage_profile_uuid_profiles_uuid_fk",
          "tableFrom": "token_usage",
          "tableTo": "profiles",
          "columnsFrom": [
            "profile_uuid"
          ],
          "columnsTo": [
            "uuid"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        },
        "token_usage_embedded_chat_uuid_embedded_chats_uuid_fk": {
          "name": "token_usage_embedded_chat_uuid_embedded_chats_uuid_fk",
          "tableFrom": "token_usage",
          "tableTo": "embedded_chats",
          "columnsFrom": [
            "embedded_chat_uuid"
          ],
          "columnsTo": [
            "uuid"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        },
        "token_usage_conversation_uuid_chat_conversations_uuid_fk": {
          "name": "token_usage_conversation_uuid_chat_conversations_uuid_fk",
          "tableFrom": "token_usage",
          "tableTo": "chat_conversations",
          "columnsFrom": [
            "conversation_uuid"
          ],
          "columnsTo": [
            "uuid"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        },
        "token_usage_message_id_chat_messages_id_fk": {
          "name": "token_usage_message_id_chat_messages_id_fk",
          "tableFrom": "token_usage",
          "tableTo": "chat_messages",
          "columnsFrom": [
            "message_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.tools": {
      "name": "tools",
      "schema": "",
      "columns": {
        "uuid": {
          "name": "uuid",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "name": {
          "name": "name",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "description": {
          "name": "description",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "tool_schema": {
          "name": "tool_schema",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": true
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "mcp_server_uuid": {
          "name": "mcp_server_uuid",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "status": {
          "name": "status",
          "type": "toggle_status",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": true,
          "default": "'ACTIVE'"
        }
      },
      "indexes": {
        "tools_mcp_server_uuid_idx": {
          "name": "tools_mcp_server_uuid_idx",
          "columns": [
            {
              "expression": "mcp_server_uuid",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "tools_status_idx": {
          "name": "tools_status_idx",
          "columns": [
            {
              "expression": "status",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "tools_mcp_server_uuid_mcp_servers_uuid_fk": {
          "name": "tools_mcp_server_uuid_mcp_servers_uuid_fk",
          "tableFrom": "tools",
          "tableTo": "mcp_servers",
          "columnsFrom": [
            "mcp_server_uuid"
          ],
          "columnsTo": [
            "uuid"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "tools_unique_tool_name_per_server_idx": {
          "name": "tools_unique_tool_name_per_server_idx",
          "nullsNotDistinct": false,
          "columns": [
            "mcp_server_uuid",
            "name"
          ]
        }
      },
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.transport_configs": {
      "name": "transport_configs",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "server_uuid": {
          "name": "server_uuid",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "transport_type": {
          "name": "transport_type",
          "type": "varchar(50)",
          "primaryKey": false,
          "notNull": true
        },
        "config": {
          "name": "config",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": true
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {
        "idx_transport_configs_server_uuid": {
          "name": "idx_transport_configs_server_uuid",
          "columns": [
            {
              "expression": "server_uuid",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "transport_configs_server_uuid_mcp_servers_uuid_fk": {
          "name": "transport_configs_server_uuid_mcp_servers_uuid_fk",
          "tableFrom": "transport_configs",
          "tableTo": "mcp_servers",
          "columnsFrom": [
            "server_uuid"
          ],
          "columnsTo": [
            "uuid"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.users": {
      "name": "users",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "text",
          "primaryKey": true,
          "notNull": true
        },
        "name": {
          "name": "name",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "email": {
          "name": "email",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "password": {
          "name": "password",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "email_verified": {
          "name": "email_verified",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": false
        },
        "image": {
          "name": "image",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "username": {
          "name": "username",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "bio": {
          "name": "bio",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "is_public": {
          "name": "is_public",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true,
          "default": false
        },
        "language": {
          "name": "language",
          "type": "language",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": false,
          "default": "'en'"
        },
        "avatar_url": {
          "name": "avatar_url",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "website": {
          "name": "website",
          "type": "varchar(255)",
          "primaryKey": false,
          "notNull": false
        },
        "location": {
          "name": "location",
          "type": "varchar(255)",
          "primaryKey": false,
          "notNull": false
        },
        "company": {
          "name": "company",
          "type": "varchar(255)",
          "primaryKey": false,
          "notNull": false
        },
        "twitter_handle": {
          "name": "twitter_handle",
          "type": "varchar(100)",
          "primaryKey": false,
          "notNull": false
        },
        "github_handle": {
          "name": "github_handle",
          "type": "varchar(100)",
          "primaryKey": false,
          "notNull": false
        },
        "ai_assistants_description": {
          "name": "ai_assistants_description",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {
        "users_username_idx": {
          "name": "users_username_idx",
          "columns": [
            {
              "expression": "username",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "users_email_idx": {
          "name": "users_email_idx",
          "columns": [
            {
              "expression": "email",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "users_username_unique": {
          "name": "users_username_unique",
          "nullsNotDistinct": false,
          "columns": [
            "username"
          ]
        }
      },
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.verification_tokens": {
      "name": "verification_tokens",
      "schema": "",
      "columns": {
        "identifier": {
          "name": "identifier",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "token": {
          "name": "token",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "expires": {
          "name": "expires",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {},
      "foreignKeys": {},
      "compositePrimaryKeys": {
        "verification_tokens_identifier_token_pk": {
          "name": "verification_tokens_identifier_token_pk",
          "columns": [
            "identifier",
            "token"
          ]
        }
      },
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    }
  },
  "enums": {
    "public.language": {
      "name": "language",
      "schema": "public",
      "values": [
        "en",
        "tr",
        "nl",
        "zh",
        "ja",
        "hi"
      ]
    },
    "public.mcp_server_source": {
      "name": "mcp_server_source",
      "schema": "public",
      "values": [
        "PLUGGEDIN",
        "COMMUNITY",
        "REGISTRY"
      ]
    },
    "public.mcp_server_status": {
      "name": "mcp_server_status",
      "schema": "public",
      "values": [
        "ACTIVE",
        "INACTIVE",
        "SUGGESTED",
        "DECLINED"
      ]
    },
    "public.mcp_server_type": {
      "name": "mcp_server_type",
      "schema": "public",
      "values": [
        "STDIO",
        "SSE",
        "STREAMABLE_HTTP"
      ]
    },
    "public.profile_capability": {
      "name": "profile_capability",
      "schema": "public",
      "values": [
        "TOOLS_MANAGEMENT"
      ]
    },
    "public.toggle_status": {
      "name": "toggle_status",
      "schema": "public",
      "values": [
        "ACTIVE",
        "INACTIVE"
      ]
    }
  },
  "schemas": {},
  "sequences": {},
  "roles": {},
  "policies": {},
  "views": {},
  "_meta": {
    "columns": {},
    "schemas": {},
    "tables": {}
  }
}