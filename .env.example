# Database
# For local development with docker-compose: 
# DATABASE_URL=postgresql://pluggedin:your-dev-password-here@localhost:5432/pluggedin_dev
# For production with docker-compose:
# DATABASE_URL=postgresql://pluggedin:your-secure-password-here@pluggedin-postgres:5432/pluggedin
DATABASE_URL=postgresql://your-username:your-password-here@your-host:5432/your-database

# Database SSL Configuration (for production or secure connections)
DATABASE_SSL=false                        # Set to true to enable SSL connection
DATABASE_SSL_REJECT_UNAUTHORIZED=false    # Set to false to accept self-signed certificates

# NextAuth
NEXTAUTH_URL=http://localhost:12005
NEXTAUTH_SECRET=your-nextauth-secret-here # Generate with: pnpm run generate-encryption-key or openssl rand -base64 32
NEXT_PUBLIC_APP_URL=http://localhost:12005

# Encryption Key (REQUIRED for secure storage of MCP server configurations)
NEXT_SERVER_ACTIONS_ENCRYPTION_KEY= # Generate with: openssl rand -base64 32

# App Version (Optional - defaults to package.json version)
# NEXT_PUBLIC_APP_VERSION=2.6.2

# Feature Flags
ENABLE_RAG=true                    # Enable RAG (document processing) features
ENABLE_NOTIFICATIONS=true          # Enable notification system
ENABLE_EMAIL_VERIFICATION=false    # Enable email verification for new users
ENABLE_WELCOME_EMAILS=true         # Enable welcome emails for new users
ENABLE_FOLLOW_UP_EMAILS=true       # Enable automated follow-up emails

# Email (Optional)
EMAIL_FROM=noreply@plugged.in
EMAIL_FROM_NAME=Pluggedin
EMAIL_REPLY_TO=cem@plugged.in
EMAIL_SERVER_HOST=smtp.example.com
EMAIL_SERVER_PORT=587
EMAIL_SERVER_USER=
EMAIL_SERVER_PASSWORD=

# Email Automation
WELCOME_EMAIL_DELAY_MINUTES=5      # Delay before sending welcome email after signup
FOLLOW_UP_2_DAYS=2                 # Days after signup for first follow-up
FOLLOW_UP_5_DAYS=5                 # Days after signup for second follow-up

# OAuth Providers (Optional)
GITHUB_ID=
GITHUB_SECRET=
GITHUB_TOKEN= # GitHub Token for API calls (Optional)
GITHUB_CLIENT_ID= # GitHub OAuth Client ID (for registry authentication)
GOOGLE_CLIENT_ID=
GOOGLE_CLIENT_SECRET=
TWITTER_CLIENT_ID=
TWITTER_CLIENT_SECRET=

# AI Model API Keys (Optional)
ANTHROPIC_API_KEY=
OPENAI_API_KEY=
GOOGLE_API_KEY=
# BRAVE_API_KEY=

# LangSmith Observability (Optional)
# Uncomment these to enable LangSmith tracing
# LANGCHAIN_TRACING_V2=true
# LANGCHAIN_API_KEY=your-langsmith-api-key
# LANGCHAIN_PROJECT=pluggedin-app
# LANGCHAIN_ENDPOINT=https://api.smith.langchain.com


# Admin Configuration
ADMIN_NOTIFICATION_EMAILS= # Comma-separated list of admin emails (e.g., admin@example.com,team@example.com)
ADMIN_NOTIFICATION_SEVERITIES=ALERT,CRITICAL # Severity levels that trigger admin emails (INFO,WARNING,ALERT,CRITICAL)
ADMIN_DAILY_SUMMARY=false # Send daily summary to admins
ADMIN_FAILED_LOGIN_THRESHOLD=5 # Number of failed logins before admin notification
ADMIN_MIGRATION_SECRET= # Secret for database migration endpoint

# Application Configuration

# Security
# Rate limiting will use in-memory store by default
# For production, consider using Redis:
# REDIS_URL=redis://localhost:6379

# API Configuration
RAG_API_URL=


# Registry Configuration
REGISTRY_API_URL=http://localhost:3001
REGISTRY_INTERNAL_API_KEY=your-secure-internal-api-key-here

# Stripe Payment Integration
STRIPE_SECRET_KEY= # Your Stripe secret key (starts with sk_)
STRIPE_WEBHOOK_SECRET= # Your Stripe webhook signing secret (starts with whsec_)
NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY= # Your Stripe publishable key (starts with pk_)

# Server Actions Encryption Key
# SECURITY: Generate with: openssl rand -base64 32
# NEVER commit the actual key to version control
# This key is used to encrypt sensitive MCP server data in the database
NEXT_SERVER_ACTIONS_ENCRYPTION_KEY=

# Admin Configuration
NEXT_PUBLIC_ADMIN_USERS=email1@example.com,email2@example.com # Comma-separated list of admin user emails
NEXT_PUBLIC_PLUGGEDIN_REGISTRY_URL=http://localhost:3001 # URL of the pluggedin-registry service

# Pluggedin Registry Configuration
# This is used to connect the pluggedin-app with the pluggedin-registry service.
REGISTRY_API_URL=http://localhost:3001
REGISTRY_INTERNAL_API_KEY=your-registry-internal-api-key-here
REGISTRY_AUTH_TOKEN=your-registry-jwt-token-here # JWT token for publishing to registry

# Registry Real-time Analytics Configuration
# These are used for tracking MCP installations, tool calls, and server additions

# MCP Server Resource Limits
MCP_CPU_CORES_MAX=0.5              # Max CPU cores per server (0.5 = 50% of one core)
MCP_MEMORY_MAX_MB=512              # Max memory per server in MB
MCP_IO_READ_MBPS=10                # Max I/O read speed in MB/s
MCP_IO_WRITE_MBPS=5                # Max I/O write speed in MB/s
MCP_PROCESS_TIMEOUT_MS=300000      # Max process runtime in ms (5 minutes)
MCP_STARTUP_TIMEOUT_MS=10000       # Max startup time in ms (10 seconds)

# Package Management Configuration
MCP_PACKAGE_STORE_DIR=/var/mcp-packages    # Base directory for package storage
MCP_PNPM_STORE_DIR=/var/mcp-packages/pnpm-store    # pnpm content-addressable store
MCP_UV_CACHE_DIR=/var/mcp-packages/uv-cache        # Python uv cache directory
MCP_PACKAGE_CACHE_DAYS=30          # Days to keep unused packages
MCP_PREWARM_COMMON_PACKAGES=true   # Pre-install common packages

# Isolation Configuration
MCP_ISOLATION_TYPE=bubblewrap      # bubblewrap | firejail | none
MCP_ISOLATION_FALLBACK=firejail    # Fallback if primary not available
MCP_ENABLE_NETWORK_ISOLATION=false # Per-server network namespaces

# MCP Interpreter Paths (OS-specific defaults, customize as needed)
# macOS (Homebrew):
# MCP_NODEJS_BIN_DIR=/opt/homebrew/bin
# MCP_PYTHON_BIN_DIR=/opt/homebrew/bin
# MCP_DOCKER_BIN_DIR=/usr/local/bin
# 
# Linux (system install):
# MCP_NODEJS_BIN_DIR=/usr/local/bin
# MCP_PYTHON_BIN_DIR=/usr/local/bin
# MCP_DOCKER_BIN_DIR=/usr/local/bin
#
# Windows:
# MCP_NODEJS_BIN_DIR=C:\Program Files\nodejs
# MCP_PYTHON_BIN_DIR=C:\Python\Scripts
# MCP_DOCKER_BIN_DIR=C:\Program Files\Docker\Docker\resources\bin

# Rate Limiting Configuration (Optional - defaults are usually sufficient)
# RATE_LIMIT_SERVER_MOD_WINDOW_MS=60000    # Server modification window (default: 1 minute)
# RATE_LIMIT_SERVER_MOD_MAX=10             # Max server modifications per window (default: 10)
# RATE_LIMIT_SERVER_READ_WINDOW_MS=60000   # Server read window (default: 1 minute)
# RATE_LIMIT_SERVER_READ_MAX=60            # Max server reads per window (default: 60)
# RATE_LIMIT_SENSITIVE_WINDOW_MS=3600000   # Sensitive operations window (default: 1 hour)
# RATE_LIMIT_SENSITIVE_MAX=10              # Max sensitive operations per window (default: 10)
# RATE_LIMIT_DISCOVERY_WINDOW_MS=60000     # Discovery operations window (default: 1 minute)
# RATE_LIMIT_DISCOVERY_MAX=5               # Max discovery operations per window (default: 5)

ENABLE_RAG=true                    # Enable RAG (document processing) features
ENABLE_NOTIFICATIONS=true          # Enable notification system (optional but recommended)